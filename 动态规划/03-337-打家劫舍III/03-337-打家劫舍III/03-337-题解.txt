这个题将【打家劫舍I】拓展为树形结构，和打家劫舍I一样，不能选择相邻的两个节点。所以对于一个子树来说，有两种情况：

包含当前根节点
不包含当前根节点
情况1：包含根节点
由于包含了根节点，所以不能选择左右儿子节点，这种情况的最大值为：当前节点 + 左儿子情况2 + 右二子情况2

情况2：不包含根节点
这种情况，可以选择左右儿子节点，所以有四种可能：

左儿子情况1 + 右儿子情况1
左儿子情况1 + 右儿子情况2
左儿子情况2 + 右儿子情况1
左儿子情况2 + 右儿子情况2
综合来说就是，max(左儿子情况1, 左儿子情况2) + max(右儿子情况1, 右儿子情况2)。

综合两种情况，深度优先，从叶子节点遍历到根节点即可。
由于只有两种情况，可以选择使用pair来存储这两种情况的数据值。
pair的含义：<情况1包含当前节点的最大值，情况2不包含当前节点的最大值>
